/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.10.0 - 2014-01-15
 * License: MIT
 */
angular.module("ui.bootstrap.custom", ["ui.bootstrap.transition","ui.bootstrap.collapse"]);
angular.module('ui.bootstrap.transition', [])

/**
 * $transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.
 * @param  {DOMElement} element  The DOMElement that will be animated.
 * @param  {string|object|function} trigger  The thing that will cause the transition to start:
 *   - As a string, it represents the css class to be added to the element.
 *   - As an object, it represents a hash of style attributes to be applied to the element.
 *   - As a function, it represents a function to be called that will cause the transition to occur.
 * @return {Promise}  A promise that is resolved when the transition finishes.
 */
    .factory('$transition', ['$q', '$timeout', '$rootScope', function($q, $timeout, $rootScope) {

        var $transition = function(element, trigger, options) {
            options = options || {};
            var deferred = $q.defer();
            var endEventName = $transition[options.animation ? "animationEndEventName" : "transitionEndEventName"];

            var transitionEndHandler = function(event) {
                $rootScope.$apply(function() {
                    element.unbind(endEventName, transitionEndHandler);
                    deferred.resolve(element);
                });
            };

            if (endEventName) {
                element.bind(endEventName, transitionEndHandler);
            }

            // Wrap in a timeout to allow the browser time to update the DOM before the transition is to occur
            $timeout(function() {
                if ( angular.isString(trigger) ) {
                    element.addClass(trigger);
                } else if ( angular.isFunction(trigger) ) {
                    trigger(element);
                } else if ( angular.isObject(trigger) ) {
                    element.css(trigger);
                }
                //If browser does not support transitions, instantly resolve
                if ( !endEventName ) {
                    deferred.resolve(element);
                }
            });

            // Add our custom cancel function to the promise that is returned
            // We can call this if we are about to run a new transition, which we know will prevent this transition from ending,
            // i.e. it will therefore never raise a transitionEnd event for that transition
            deferred.promise.cancel = function() {
                if ( endEventName ) {
                    element.unbind(endEventName, transitionEndHandler);
                }
                deferred.reject('Transition cancelled');
            };

            return deferred.promise;
        };

        // Work out the name of the transitionEnd event
        var transElement = document.createElement('trans');
        var transitionEndEventNames = {
            'WebkitTransition': 'webkitTransitionEnd',
            'MozTransition': 'transitionend',
            'OTransition': 'oTransitionEnd',
            'transition': 'transitionend'
        };
        var animationEndEventNames = {
            'WebkitTransition': 'webkitAnimationEnd',
            'MozTransition': 'animationend',
            'OTransition': 'oAnimationEnd',
            'transition': 'animationend'
        };
        function findEndEventName(endEventNames) {
            for (var name in endEventNames){
                if (transElement.style[name] !== undefined) {
                    return endEventNames[name];
                }
            }
        }
        $transition.transitionEndEventName = findEndEventName(transitionEndEventNames);
        $transition.animationEndEventName = findEndEventName(animationEndEventNames);
        return $transition;
    }]);

angular.module('ui.bootstrap.collapse', ['ui.bootstrap.transition'])

    .directive('collapse', ['$transition', function ($transition, $timeout) {

        return {
            link: function (scope, element, attrs) {

                var initialAnimSkip = true;
                var currentTransition;

                function doTransition(change) {
                    var newTransition = $transition(element, change);
                    if (currentTransition) {
                        currentTransition.cancel();
                    }
                    currentTransition = newTransition;
                    newTransition.then(newTransitionDone, newTransitionDone);
                    return newTransition;

                    function newTransitionDone() {
                        // Make sure it's this transition, otherwise, leave it alone.
                        if (currentTransition === newTransition) {
                            currentTransition = undefined;
                        }
                    }
                }

                function expand() {
                    if (initialAnimSkip) {
                        initialAnimSkip = false;
                        expandDone();
                    } else {
                        element.removeClass('collapse').addClass('collapsing');
                        doTransition({ height: element[0].scrollHeight + 'px' }).then(expandDone);
                    }
                }

                function expandDone() {
                    element.removeClass('collapsing');
                    element.addClass('collapse in');
                    element.css({height: 'auto'});
                }

                function collapse() {
                    if (initialAnimSkip) {
                        initialAnimSkip = false;
                        collapseDone();
                        element.css({height: 0});
                    } else {
                        // CSS transitions don't work with height: auto, so we have to manually change the height to a specific value
                        element.css({ height: element[0].scrollHeight + 'px' });
                        //trigger reflow so a browser realizes that height was updated from auto to a specific value
                        var x = element[0].offsetWidth;

                        element.removeClass('collapse in').addClass('collapsing');

                        doTransition({ height: 0 }).then(collapseDone);
                    }
                }

                function collapseDone() {
                    element.removeClass('collapsing');
                    element.addClass('collapse');
                }

                scope.$watch(attrs.collapse, function (shouldCollapse) {
                    if (shouldCollapse) {
                        collapse();
                    } else {
                        expand();
                    }
                });
            }
        };
    }]);

/*
 AngularJS v1.2.16
 (c) 2010-2014 Google, Inc. http://angularjs.org
 License: MIT
 */
(function(p,h,q){'use strict';function E(a){var e=[];s(e,h.noop).chars(a);return e.join("")}function k(a){var e={};a=a.split(",");var d;for(d=0;d<a.length;d++)e[a[d]]=!0;return e}function F(a,e){function d(a,b,d,g){b=h.lowercase(b);if(t[b])for(;f.last()&&u[f.last()];)c("",f.last());v[b]&&f.last()==b&&c("",b);(g=w[b]||!!g)||f.push(b);var l={};d.replace(G,function(a,b,e,c,d){l[b]=r(e||c||d||"")});e.start&&e.start(b,l,g)}function c(a,b){var c=0,d;if(b=h.lowercase(b))for(c=f.length-1;0<=c&&f[c]!=b;c--);
    if(0<=c){for(d=f.length-1;d>=c;d--)e.end&&e.end(f[d]);f.length=c}}var b,g,f=[],l=a;for(f.last=function(){return f[f.length-1]};a;){g=!0;if(f.last()&&x[f.last()])a=a.replace(RegExp("(.*)<\\s*\\/\\s*"+f.last()+"[^>]*>","i"),function(b,a){a=a.replace(H,"$1").replace(I,"$1");e.chars&&e.chars(r(a));return""}),c("",f.last());else{if(0===a.indexOf("\x3c!--"))b=a.indexOf("--",4),0<=b&&a.lastIndexOf("--\x3e",b)===b&&(e.comment&&e.comment(a.substring(4,b)),a=a.substring(b+3),g=!1);else if(y.test(a)){if(b=a.match(y))a=
    a.replace(b[0],""),g=!1}else if(J.test(a)){if(b=a.match(z))a=a.substring(b[0].length),b[0].replace(z,c),g=!1}else K.test(a)&&(b=a.match(A))&&(a=a.substring(b[0].length),b[0].replace(A,d),g=!1);g&&(b=a.indexOf("<"),g=0>b?a:a.substring(0,b),a=0>b?"":a.substring(b),e.chars&&e.chars(r(g)))}if(a==l)throw L("badparse",a);l=a}c()}function r(a){if(!a)return"";var e=M.exec(a);a=e[1];var d=e[3];if(e=e[2])n.innerHTML=e.replace(/</g,"&lt;"),e="textContent"in n?n.textContent:n.innerText;return a+e+d}function B(a){return a.replace(/&/g,
    "&amp;").replace(N,function(a){return"&#"+a.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}function s(a,e){var d=!1,c=h.bind(a,a.push);return{start:function(a,g,f){a=h.lowercase(a);!d&&x[a]&&(d=a);d||!0!==C[a]||(c("<"),c(a),h.forEach(g,function(d,f){var g=h.lowercase(f),k="img"===a&&"src"===g||"background"===g;!0!==O[g]||!0===D[g]&&!e(d,k)||(c(" "),c(f),c('="'),c(B(d)),c('"'))}),c(f?"/>":">"))},end:function(a){a=h.lowercase(a);d||!0!==C[a]||(c("</"),c(a),c(">"));a==d&&(d=!1)},chars:function(a){d||
c(B(a))}}}var L=h.$$minErr("$sanitize"),A=/^<\s*([\w:-]+)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*>/,z=/^<\s*\/\s*([\w:-]+)[^>]*>/,G=/([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g,K=/^</,J=/^<\s*\//,H=/\x3c!--(.*?)--\x3e/g,y=/<!DOCTYPE([^>]*?)>/i,I=/<!\[CDATA\[(.*?)]]\x3e/g,N=/([^\#-~| |!])/g,w=k("area,br,col,hr,img,wbr");p=k("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr");q=k("rp,rt");var v=h.extend({},q,p),t=h.extend({},p,k("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")),
    u=h.extend({},q,k("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),x=k("script,style"),C=h.extend({},w,t,u,v),D=k("background,cite,href,longdesc,src,usemap"),O=h.extend({},D,k("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,target,title,type,valign,value,vspace,width")),
    n=document.createElement("pre"),M=/^(\s*)([\s\S]*?)(\s*)$/;h.module("ngSanitize",[]).provider("$sanitize",function(){this.$get=["$$sanitizeUri",function(a){return function(e){var d=[];F(e,s(d,function(c,b){return!/^unsafe/.test(a(c,b))}));return d.join("")}}]});h.module("ngSanitize").filter("linky",["$sanitize",function(a){var e=/((ftp|https?):\/\/|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>]/,d=/^mailto:/;return function(c,b){function g(a){a&&m.push(E(a))}function f(a,c){m.push("<a ");h.isDefined(b)&&
(m.push('target="'),m.push(b),m.push('" '));m.push('href="');m.push(a);m.push('">');g(c);m.push("</a>")}if(!c)return c;for(var l,k=c,m=[],n,p;l=k.match(e);)n=l[0],l[2]==l[3]&&(n="mailto:"+n),p=l.index,g(k.substr(0,p)),f(n,l[0].replace(d,"")),k=k.substring(p+l[0].length);g(k);return a(m.join(""))}}])})(window,window.angular);
//# sourceMappingURL=angular-sanitize.min.js.map
/*! AngularComponents 2015-02-05 */

angular.module("uiComponents",["uiComponents.dropdown","uiComponents.menuItem","uiComponents.navbar","uiComponents.smartButton"]),function(){"use strict";var tpl="";tpl='<li class="uic-dropdown">    <a dropdown-toggle       ng-bind-html="dropdownTitle"><b class="caret"></b></a>    <ul class="dropdown-menu"        ng-if="jsonData">        <li ng-repeat="item in menuItems"            ng-class="disablable"            ng-init="disablable=(item.url)?null: \'disabled\'">            <a ng-href="{{ item.url }}"               ng-bind="item.text"               ng-click="selected($event, this)"></a>        </li>    </ul>    <ul class="dropdown-menu"        ng-if="!jsonData"        ng-transclude></ul></li>',angular.module("uiComponents.dropdown",["uiComponents.menuItem","ui.bootstrap.custom","ngSanitize"]).service("uicDropdownService",["$document",function($document){function closeDropdown(evt){evt&&evt.isDefaultPrevented()||openScope.$apply(function(){openScope.isOpen=!1})}function escapeKeyBind(evt){27===evt.which&&(openScope.focusToggleElement(),closeDropdown())}var openScope=null,dropdowns=[];return{register:function(scope){dropdowns.push(scope)},remove:function(scope){for(var x=0;x<dropdowns.length;x++)if(dropdowns[x]===scope){dropdowns.splice(x,1);break}},getDropdowns:function(){return dropdowns},getById:function(id){var x;for(x=0;x<dropdowns.length;x++)if(id===dropdowns[x].$id)return dropdowns[x];return!1},open:function(dropdownScope){openScope||($document.bind("click",closeDropdown),$document.bind("keydown",escapeKeyBind)),openScope&&openScope!==dropdownScope&&(openScope.isOpen=!1),openScope=dropdownScope},close:function(dropdownScope){openScope===dropdownScope&&(openScope=null,$document.unbind("click",closeDropdown),$document.unbind("keydown",escapeKeyBind))}}}]).directive("uicDropdownMenu",["$timeout","uicDropdownService",function($timeout,uicDropdownService){return{template:tpl,restrict:"E",replace:!0,transclude:!0,scope:{url:"@"},controller:["$scope","$element","$attrs",function($scope,$element,$attrs){$scope.disablable="",$scope.isOpen=!1;var that=this;angular.forEach($scope.$parent.menu,function(menuItems,dropdownTitle){angular.isArray(menuItems)&&($scope.dropdownTitle=dropdownTitle+'<b class="caret"></b>',$scope.menuItems=menuItems,$scope.uicId=dropdownTitle)}),$attrs.text&&($scope.uicId=$attrs.text,$scope.dropdownTitle=$scope.uicId+'<b class="caret"></b>'),$scope.menuItems&&($scope.jsonData=!0),this.init=function(element){that.$element=element},this.toggle=function(open){return $scope.isOpen=arguments.length?!!open:!$scope.isOpen,$scope.isOpen},$scope.focusToggleElement=function(){that.toggleElement&&that.toggleElement[0].focus()},$scope.selected=function($event,scope){$scope.$emit("menu-item-selected",scope),$event.preventDefault(),$event.stopPropagation()},$scope.$watch("isOpen",function(isOpen){isOpen?($scope.focusToggleElement(),uicDropdownService.open($scope),$scope.$emit("dropdown-opened")):(uicDropdownService.close($scope),$scope.$emit("dropdown-closed"))}),$scope.$on("$locationChangeSuccess",function(){}),$scope.$on("menu-item-selected",function(){})}],link:function(scope,iElement,iAttrs,dropdownCtrl){dropdownCtrl.init(iElement),scope.iElement=iElement,uicDropdownService.register(scope)}}}]).directive("dropdownMenu",function(){return{restrict:"C",link:function(scope,element){scope.$watch("isOpen",function(isOpen,wasOpen){isOpen!==wasOpen&&element.stop().slideToggle(200)})}}}).directive("dropdownToggle",function(){return{restrict:"A",require:"?^uicDropdownMenu",link:function(scope,element,attrs,dropdownCtrl){if(dropdownCtrl){dropdownCtrl.toggleElement=element;var toggleDropdown=function(event){event.preventDefault(),event.stopPropagation(),element.hasClass("disabled")||attrs.disabled||scope.$apply(function(){dropdownCtrl.toggle()})};element.bind("click",toggleDropdown),scope.$on("$destroy",function(){element.unbind("click",toggleDropdown)})}}}})}(),function(){"use strict";var tpl="";tpl='<li class="uic-menu-item" ng-class="disablable">    <a ng-href="{{ url }}"       ng-bind="text"       ng-click="selected($event, this)">    </a></li>',angular.module("uiComponents.menuItem",[]).directive("uicMenuItem",[function(){return{template:tpl,replace:!0,restrict:"E",scope:{text:"@",url:"@"},controller:["$scope",function($scope){$scope.disablable="",$scope.selected=function($event,scope){$scope.$emit("menu-item-selected",scope),$event.preventDefault(),$event.stopPropagation()}}],link:function(scope){scope.url||(scope.disablable="disabled")}}}])}(),function(){"use strict";var tpl="";tpl='<nav id="uic-navbar"     class="navbar navbar-inverse"     ng-class="[position,theme]">    <div class="container-fluid">        <div class="navbar-header">            <button class="navbar-toggle"                    type="button"                    ng-click="isCollapsed = !isCollapsed">                <span class="sr-only">Toggle navigation</span>                <span class="icon-bar"></span>                <span class="icon-bar"></span>                <span class="icon-bar"></span>            </button>            <a class="navbar-brand"               ng-href="{{ homeUrl }}">Brand Logo</a>        </div>        <div class="collapse navbar-collapse"             collapse="isCollapsed">            <ul class="nav navbar-nav uic-data"                ng-hide="minimalHeader">                <uic-dropdown-menu                        ng-repeat="menu in menus">                </uic-dropdown-menu>            </ul>            <ul class="nav navbar-nav uic-include"                ng-hide="minimalHeader"                uic-include></ul>        </div>    </div></nav>',angular.module("uiComponents.navbar",["uiComponents.dropdown"]).service("uicNavBarService",["$window",function($window){var menus=!1;this.addMenus=function(data){angular.isArray(data)&&(menus=data)},this.getMenus=function(){return $window.UIC&&$window.UIC.header?$window.UIC.header:menus?menus:!1}}]).directive("uicInclude",function(){return{restrict:"A",link:function(scope,iElement,iAttrs,ctrl,$transclude){$transclude(scope,function(clone){iElement.append(clone)})}}}).directive("uicNavBar",["uicDropdownService","uicNavBarService","$location","$compile","$log",function(uicDropdownService,uicNavBarService,$location,$compile,$log){return{template:tpl,restrict:"E",transclude:!0,replace:!0,scope:{minimalHeader:"@minimal",homeUrl:"@"},controller:["$scope","$element","$attrs",function($scope,$element){var that=this;this.init=function(element){that.$element=element},this.addDropdown=function(menuObj){var newScope=$scope.$root.$new();newScope.menu=newScope.$parent.menu=menuObj;var $el=$compile("<uic-dropdown-menu></uic-dropdown-menu>")(newScope),isolateScope=$el.isolateScope();isolateScope.$digest(),$element.find("ul").last().append($el)},this.removeDropdown=function(dropdownId){var menuArray=$scope.registeredMenus.filter(function(el){return el.uicId==dropdownId}),dropdown=menuArray[0];uicDropdownService.remove(dropdown),dropdown.iElement.remove(),dropdown.$destroy()},$scope.addOrRemove=function(dropdowns,action){action+="Dropdown",angular.isArray(dropdowns)?angular.forEach(dropdowns,function(dropdown){that[action](dropdown)}):that[action](dropdowns)},$scope.isCollapsed=!0,$scope.menus=uicNavBarService.getMenus(),$scope.registeredMenus=[],$scope.$on("header-minimize",function(){$scope.minimalHeader=!0}),$scope.$on("header-maximize",function(){$scope.minimalHeader=!1}),$scope.$on("add-nav-dropdowns",function(evt,obj){$scope.addOrRemove(obj,"add")}),$scope.$on("remove-nav-dropdowns",function(evt,ids){$scope.addOrRemove(ids,"remove")}),$scope.$on("dropdown-opened",function(evt,targetScope){$log.log("dropdown-opened",targetScope)}),$scope.$on("dropdown-closed",function(evt,targetScope){$log.log("dropdown-closed",targetScope)}),$scope.$on("menu-item-selected",function(evt,scope){var url;try{url=scope.url||scope.item.url,$log.log(url)}catch(err){$log.warn("no url")}})}],link:function(scope,iElement,iAttrs,navCtrl){scope.registeredMenus=uicDropdownService.getDropdowns(),scope.position="true"==iAttrs.sticky?"navbar-fixed-top":"navbar-static-top",scope.theme=iAttrs.theme?iAttrs.theme:null,navCtrl.init(iElement)}}}])}(),function(){"use strict";var tpl="";tpl='<a ng-class="bttnClass"   ng-click="doSomething(this);debug()">    {{bttnText}}    <span ng-transclude></span></a>';var buttons=angular.module("uiComponents.smartButton",[]);buttons.directive("smartButton",["$timeout",function($timeout){return{template:tpl,restrict:"E",replace:!0,transclude:!0,scope:{debug:"&"},controller:function($scope){$scope.bttnClass="btn btn-default",$scope.bttnText=$scope.defaultText="Smart Button",$scope.activeText="Processing...",$scope.doSomething=function(elem){$scope.bttnText=$scope.activeText,$timeout(function(){$scope.bttnText="We're Done!"},3e3),$scope.$emit("smart-button-click",elem)},$scope.$on("smart-button-command",function(evt,targetComponentId,command){targetComponentId===$scope.$id&&command.setClass&&($scope.bttnClass="btn "+command.setClass)})},link:function(scope,iElement,iAttrs){iAttrs.defaultText&&(scope.bttnText=scope.defaultText=iAttrs.defaultText),iAttrs.activeText&&(scope.activeText=iAttrs.activeText)}}}])}();
//# sourceMappingURL=ui-components-0.0.1.min.map